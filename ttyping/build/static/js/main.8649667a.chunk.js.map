{"version":3,"sources":["components/Wrapper/componentsWrapper/LanguageOptions.js","components/Wrapper/Wrapper.js","files/App/utils.js","files/App/App.js","index.js"],"names":["props","automaticOption","value","selected","toggleWrapper","changeText","className","LanguageOptions","onClick","LOCAL","process","cursor","currentChar","translateInTextarea","processedText","currentText","time","timeout","processingTranslation","a","data","text","from","to","clearTimeout","fetch","method","body","JSON","stringify","headers","res","json","resJson","translatedText","translated_text","document","querySelector","innerHTML","setTimeout","rData","initDebounce","translatedOptions","option","get","set","opt","initTranslateOptions","handleSpanPosition","currentPosition","nextPosition","pos","movePosition","undefined","inithandleSpanPosition","handleTimeController","initTime","endTime","getInitTime","getEndTime","reset","start","Date","now","end","totalTime","wordsPerMinute","this","seconds","toFixed","wordsCount","textContent","match","length","Math","round","format","type","msTotalTime","date","setHours","setMinutes","setSeconds","setMilliseconds","mountHours","getHours","hours","substring","mountMinutes","getMinutes","minutes","mountSeconds","getSeconds","mountMiliseconds","getMilliseconds","miliseconds","mountTime","checkTimeValues","stringTime","typeTime","arrayTime","split","typesTime","i","tTime","slice","Number","join","initTimeController","eficiencyController","totalCharacters","result","querySelectorAll","initEficiencyController","utils","changeStringToArray","refText","arrayRefText","char","push","createSpan","index","id","updateInput","handleBool","hiddenTextarea","baseTextarea","spanChar","classList","remove","currentHiddenChar","add","nextSpanChar","prevSpanChar","moveScrollBaseTextArea","toggleCheckbox","timeController","truncStringTime","translateConf","resetTextCursor","forEach","span","setTranslateConfig","indexTo","selectedIndex","valueTo","indexFrom","config","moveScrollTranslateArea","scrollHeight","scroll","textareaPosition","getBoundingClientRect","top","spanPosition","getElementById","controlSpanPosition","scrollTo","hiddenCheckboxArea","handleBoolCheckboxArea","ckboxArea","handleBoolCheckbox","boolCheckbox","setBoolcheckbox","useState","wrapper","setWrapper","setRefText","setBoolCheckbox","boolCheckboxArea","useEffect","ckbox","addEventListener","tinput","checked","focus","hidden","onChange","map","textWrapper","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8649667a.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react'\r\n\r\nexport default (props)=>{\r\n    const {automaticOption} = props\r\n    \r\n    return(<>\r\n        {automaticOption? <option value='auto' selected>Detecção Automática</option> :''}\r\n        <option value='af'>Afrikaans</option>\r\n        <option value='sq'>Albanian</option>\r\n        <option value='am'>Amharic</option>\r\n        <option value='ar'>Arabic</option>\r\n        <option value='hy'>Armenian</option>\r\n        <option value='az'>Azerbaijani</option>\r\n        <option value='eu'>Basque</option>\r\n        <option value='be'>Belarusian</option>\r\n        <option value='bn'>Bengali</option>\r\n        <option value='bs'>Bosnian</option>\r\n        <option value='bg'>Bulgarian</option>\r\n        <option value='ca'>Catalan</option>\r\n        <option value='ceb'>Cebuano</option>\r\n        <option value='ny'>Chichewa</option>\r\n        <option value='zh-CN'>Chinese (Simplified)</option>\r\n        <option value='zh-TW'>Chinese (Traditional)</option>\r\n        <option value='co'>Corsican</option>\r\n        <option value='hr'>Croatian</option>\r\n        <option value='cs'>Czech</option>\r\n        <option value='da'>Danish</option>\r\n        <option value='nl'>Dutch</option>\r\n        <option value='en'>English</option>\r\n        <option value='eo'>Esperanto</option>\r\n        <option value='et'>Estonian</option>\r\n        <option value='tl'>Filipino</option>\r\n        <option value='fi'>Finnish</option>\r\n        <option value='fr'>French</option>\r\n        <option value='fy'>Frisian</option>\r\n        <option value='gl'>Galician</option>\r\n        <option value='ka'>Georgian</option>\r\n        <option value='de'>German</option>\r\n        <option value='el'>Greek</option>\r\n        <option value='gu'>Gujarati</option>\r\n        <option value='ht'>Haitian Creole</option>\r\n        <option value='ha'>Hausa</option>\r\n        <option value='haw'>Hawaiian</option>\r\n        <option value='he'>Hebrew</option>\r\n        <option value='iw'>Hebrew</option>\r\n        <option value='hi'>Hindi</option>\r\n        <option value='hmn'>Hmong</option>\r\n        <option value='hu'>Hungarian</option>\r\n        <option value='is'>Icelandic</option>\r\n        <option value='ig'>Igbo</option>\r\n        <option value='id'>Indonesian</option>\r\n        <option value='ga'>Irish</option>\r\n        <option value='it'>Italian</option>\r\n        <option value='ja'>Japanese</option>\r\n        <option value='jw'>Javanese</option>\r\n        <option value='kn'>Kannada</option>\r\n        <option value='kk'>Kazakh</option>\r\n        <option value='km'>Khmer</option>\r\n        <option value='ko'>Korean</option>\r\n        <option value='ku'>Kurdish (Kurmanji)</option>\r\n        <option value='ky'>Kyrgyz</option>\r\n        <option value='lo'>Lao</option>\r\n        <option value='la'>Latin</option>\r\n        <option value='lv'>Latvian</option>\r\n        <option value='lt'>Lithuanian</option>\r\n        <option value='lb'>Luxembourgish</option>\r\n        <option value='mk'>Macedonian</option>\r\n        <option value='mg'>Malagasy</option>\r\n        <option value='ms'>Malay</option>\r\n        <option value='ml'>Malayalam</option>\r\n        <option value='mt'>Maltese</option>\r\n        <option value='mi'>Maori</option>\r\n        <option value='mr'>Marathi</option>\r\n        <option value='mn'>Mongolian</option>\r\n        <option value='my'>Myanmar (Burmese)</option>\r\n        <option value='ne'>Nepali</option>\r\n        <option value='no'>Norwegian</option>\r\n        <option value='ps'>Pashto</option>\r\n        <option value='fa'>Persian</option>\r\n        <option value='pl'>Polish</option>\r\n        {!automaticOption? <option value='pt' selected>Portuguese</option>:<option value='pt'>Portuguese</option>}\r\n        <option value='pa'>Punjabi</option>\r\n        <option value='ro'>Romanian</option>\r\n        <option value='ru'>Russian</option>\r\n        <option value='sm'>Samoan</option>\r\n        <option value='gd'>Scots Gaelic</option>\r\n        <option value='sr'>Serbian</option>\r\n        <option value='st'>Sesotho</option>\r\n        <option value='sn'>Shona</option>\r\n        <option value='sd'>Sindhi</option>\r\n        <option value='si'>Sinhala</option>\r\n        <option value='sk'>Slovak</option>\r\n        <option value='sl'>Slovenian</option>\r\n        <option value='so'>Somali</option>\r\n        <option value='es'>Spanish</option>\r\n        <option value='su'>Sundanese</option>\r\n        <option value='sw'>Swahili</option>\r\n        <option value='sv'>Swedish</option>\r\n        <option value='tg'>Tajik</option>\r\n        <option value='ta'>Tamil</option>\r\n        <option value='te'>Telugu</option>\r\n        <option value='th'>Thai</option>\r\n        <option value='tr'>Turkish</option>\r\n        <option value='uk'>Ukrainian</option>\r\n        <option value='ur'>Urdu</option>\r\n        <option value='uz'>Uzbek</option>\r\n        <option value='vi'>Vietnamese</option>\r\n        <option value='cy'>Welsh</option>\r\n        <option value='xh'>Xhosa</option>\r\n        <option value='yi'>Yiddish</option>\r\n        <option value='yo'>Yoruba</option>\r\n        <option value='zu'>Zulu</option>\r\n    </>)\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport React from 'react'\r\nimport './Wrapper.css'\r\nimport '../../baseStyles.css'\r\nimport LanguageOptions from './componentsWrapper/LanguageOptions'\r\n\r\nexport default ( {toggleWrapper, changeText} )=>{\r\n\r\n    // if(!hidden){\r\n        return(\r\n            <div className='wrapper'>\r\n                <div className='translation-options-area'>\r\n                    <div className='translation-option'>\r\n                        Traduzir para:\r\n                        <br/>\r\n                        <select className='select-lang translateTo'>\r\n                            {/* <option value='en'>Inglês</option>\r\n                            <option value='pt' selected>Português</option> */}\r\n                            <LanguageOptions />\r\n                        </select>\r\n                    </div>\r\n                    <div className='translation-option'>\r\n                        Texto em: \r\n                        <br/>\r\n                        <select className='select-lang translateFrom'>\r\n                            {/* <option value='en'>Inglês</option>\r\n                            <option value='pt'>Português</option> */}\r\n                             <LanguageOptions automaticOption={true}/>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div> \r\n                <textarea className='textarea-wrapper'/>\r\n                <div className='wrapper-btns'>\r\n                    <div className='wrapper-btn' onClick={changeText}>Confirmar</div>\r\n                    <div className='wrapper-btn' onClick={toggleWrapper}>Sair</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    // }else{\r\n    //     return(<div/>)\r\n    // }\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nconst LOCAL = process.env.LOCAL || 'localhost'\r\n\r\nlet cursor = 0\r\nlet currentChar = ''\r\n\r\nconst translateInTextarea = initDebounce()\r\nconst translatedOptions = initTranslateOptions()\r\nconst handleSpanPosition = inithandleSpanPosition()\r\n\r\nconst handleTimeController = initTimeController()\r\nconst eficiencyController = initEficiencyController()\r\n\r\nconst utils = {\r\n  changeStringToArray(refText = ''){\r\n      const arrayRefText =[]\r\n      for(let char of refText){\r\n          arrayRefText.push(char)\r\n      }\r\n      return arrayRefText\r\n  },\r\n  \r\n  createSpan(char='' , index=''){\r\n      const id = `char_${index}`\r\n      return (<span id={id} className='span-char'>{char}</span>)\r\n  },\r\n  \r\n  async updateInput(handleBool){\r\n    \r\n    const hiddenTextarea =document.querySelector('#typing-textarea')\r\n    const baseTextarea = document.querySelector('.base-textarea')\r\n\r\n    try{\r\n      \r\n      const spanChar = document.querySelector(`#char_${cursor}`)\r\n      spanChar.classList.remove('bg-green')\r\n      spanChar.classList.remove('bg-red')\r\n      spanChar.classList.remove('bg-grey')\r\n\r\n      cursor = hiddenTextarea.value.length === -1 ? 0 : hiddenTextarea.value.length \r\n      let currentHiddenChar = hiddenTextarea.value[hiddenTextarea.value.length -1] \r\n      \r\n      if(currentChar === currentHiddenChar){\r\n        \r\n        spanChar.classList.add('bg-green')\r\n\r\n      }else{\r\n\r\n        spanChar.classList.add('bg-red')\r\n\r\n      }\r\n      currentChar = baseTextarea.textContent[cursor]\r\n\r\n      const nextSpanChar = document.querySelector(`#char_${cursor+1}`)\r\n      if(nextSpanChar !== null){\r\n        nextSpanChar.classList.remove('bg-green')\r\n        nextSpanChar.classList.remove('bg-red')\r\n        nextSpanChar.classList.remove('bg-grey')\r\n      }\r\n\r\n      if(cursor-1 !== 0){\r\n        const prevSpanChar = document.querySelector(`#char_${cursor-1}`)\r\n        \r\n        if (prevSpanChar !== null){\r\n          prevSpanChar.classList.remove('bg-grey')\r\n        }\r\n      }\r\n      const currentSpanChar = document.querySelector(`#char_${cursor}`)\r\n      currentSpanChar.classList.add('bg-grey')\r\n\r\n      moveScrollBaseTextArea()\r\n    }catch{\r\n      \r\n      toggleCheckbox(handleBool, true)\r\n\r\n      utils.timeController.end()\r\n      \r\n      const [stringTime, typeTime] = utils.timeController.format()\r\n      const truncStringTime = stringTime.slice(0,stringTime.length-2)\r\n      \r\n      const divTime = document.querySelector('.time-area')\r\n      divTime.innerHTML = `Tempo <strong>${truncStringTime}</strong> (${typeTime}) <br/>\r\n      Média palavras por minuto  <strong>${utils.timeController.wordsPerMinute()}</strong> <br/>\r\n      Eficiência <strong>${eficiencyController.result()} %</strong>`\r\n      // divTime.innerHTML = `Finalizado em ${(utils.timeController.totalTime()/1000).toFixed(1)} segundos <br/>\r\n      // Média palavras por minuto  ${utils.timeController.wordsPerMinute()} <br/>\r\n      // Eficiência ${eficiencyController.result()} %`\r\n      // alert(`Finalizado em ${(utils.timeController.totalTime()/1000).toFixed(1)} segundos`)\r\n    }\r\n    const translateConf = {...translatedOptions.get(), text: hiddenTextarea.value}\r\n\r\n    // console.log(translateConf)\r\n    await translateInTextarea(translateConf, \r\n      // translateInTextarea\r\n      )\r\n  },\r\n\r\n  resetTextCursor(handleBool){\r\n\r\n    resetCursor()\r\n    clearHiddenTextarea()\r\n    resetCursorColors()\r\n    toggleCheckbox(handleBool)\r\n\r\n    function resetCursor(){\r\n      cursor = 0\r\n      currentChar = ''\r\n    }\r\n\r\n    function clearHiddenTextarea(){\r\n      const hiddenTextarea = document.querySelector('#typing-textarea')\r\n      hiddenTextarea.value = ''\r\n    }\r\n\r\n    function resetCursorColors(){\r\n      const spans = document.querySelectorAll('span')\r\n      spans.forEach(span=>{\r\n      span.classList.remove('bg-green')\r\n      span.classList.remove('bg-red')\r\n      span.classList.remove('bg-grey')\r\n    })\r\n    }\r\n  },\r\n\r\n  setTranslateConfig(){\r\n\r\n    const indexTo = document.querySelector('.translateTo').selectedIndex\r\n    const valueTo = document.querySelector('.translateTo')[indexTo].value\r\n\r\n    const indexFrom = document.querySelector('.translateFrom').selectedIndex\r\n    const valueFrom = document.querySelector('.translateFrom')[indexFrom].value\r\n\r\n    // config={'from':'en', 'to':'pt'}\r\n    const config = {'from' : valueFrom, 'to': valueTo}\r\n\r\n    translatedOptions.set(config)\r\n  },\r\n\r\n  moveScrollTranslateArea(){\r\n    const scrollHeight = document.querySelector('.translate-area').scrollHeight\r\n    document.querySelector('.translate-area').scroll(0,scrollHeight)\r\n  },\r\n\r\n  timeController:handleTimeController\r\n  \r\n \r\n}\r\n\r\nfunction initDebounce( timeout=200 ){\r\n\r\n  let processedText\r\n  let currentText\r\n  let time\r\n  let processingTranslation = false\r\n\r\n  return async (data = {text:'',from:'en',to:'pt'} )=>{\r\n    currentText = data.text\r\n    clearTimeout(time)\r\n\r\n    if(!processingTranslation && processedText !== currentText){\r\n      processedText = currentText\r\n      processingTranslation = true\r\n      \r\n       \r\n      const res =  await fetch(`http://${LOCAL}:8080/`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: { \r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      const resJson = await res.json()\r\n      const translatedText = resJson.translated_text\r\n\r\n      document.querySelector('.translate-area').innerHTML = translatedText\r\n    \r\n      time = setTimeout( async ()=>{\r\n        if(processedText !== currentText){\r\n          const rData = {...data, text: currentText}\r\n          await translateInTextarea(rData)\r\n        }\r\n        \r\n      },timeout)\r\n\r\n      processingTranslation = false\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nfunction initTranslateOptions(){\r\n  const option = {\r\n    'from' : 'en',\r\n    'to': 'pt'\r\n  }\r\n  return{\r\n    get(){\r\n      return option\r\n    },\r\n    set(opt={from:'', to: ''}){\r\n      option['from'] = opt['from']\r\n      option['to'] = opt['to']\r\n    }\r\n  }\r\n}\r\n\r\nfunction inithandleSpanPosition(){\r\n  let currentPosition\r\n  let nextPosition\r\n  let pos = 0\r\n \r\n  return (movePosition)=>{\r\n    if(currentPosition === undefined){\r\n\r\n      currentPosition = movePosition\r\n      pos += movePosition\r\n\r\n    }else{\r\n      if  (movePosition !== currentPosition   && \r\n          movePosition !==nextPosition        ){\r\n\r\n          pos += movePosition\r\n          currentPosition = pos\r\n      }\r\n\r\n      nextPosition = movePosition + pos\r\n\r\n    }\r\n    return currentPosition \r\n  }\r\n}\r\n\r\nfunction moveScrollBaseTextArea(){\r\n\r\n  const textareaPosition = document.querySelector('.base-textarea').getBoundingClientRect().top\r\n\r\n  const currentSpan = document.getElementById(`char_${cursor}`)\r\n  const spanPosition = currentSpan.getBoundingClientRect().top\r\n\r\n  // console.table(\r\n  //   textareaPosition, spanPosition,)\r\n  \r\n  const moveDivScroll = spanPosition - (textareaPosition + 12)\r\n  const controlSpanPosition = handleSpanPosition(moveDivScroll)\r\n  // if(moveDivScroll !== 0 ){\r\n    // controlSpanPosition = handleSpanPosition(moveDivScroll)\r\n\r\n  // }\r\n\r\n  const textArea = document.querySelector('.base-textarea')\r\n\r\n  // console.table(\r\n  //   textareaPosition, spanPosition, moveDivScroll, controlSpanPosition   )\r\n  textArea.scrollTo(\r\n    0, controlSpanPosition\r\n    // {\r\n    //   top: controlSpanPosition ,\r\n    //   left: 0,\r\n    //   behavior: 'smooth'\r\n    // }\r\n  )\r\n\r\n}\r\n\r\nfunction toggleCheckbox(handleBool, hiddenCheckboxArea = false){\r\n  \r\n  if(handleBool !== undefined){\r\n\r\n    const [,ckboxArea] = handleBool.handleBoolCheckboxArea\r\n    if(hiddenCheckboxArea){\r\n      ckboxArea( true )\r\n    }else{\r\n      ckboxArea( false )\r\n    }\r\n\r\n    const [boolCheckbox, setBoolcheckbox] = handleBool.handleBoolCheckbox\r\n    setBoolcheckbox(!boolCheckbox)\r\n  }\r\n}\r\n\r\nfunction initTimeController(){\r\n\r\n  let initTime\r\n  let endTime\r\n\r\n  return{\r\n    getInitTime(){\r\n      return initTime\r\n    },\r\n\r\n    getEndTime(){\r\n      return endTime\r\n    },\r\n    \r\n    reset(){\r\n      initTime = undefined\r\n      endTime = undefined\r\n      const divTime = document.querySelector('.time-area')\r\n      divTime.innerHTML = ''\r\n    },\r\n\r\n    start(){\r\n      if(initTime === undefined){\r\n        initTime = Date.now()\r\n      }\r\n    },\r\n\r\n    end(){\r\n      if(endTime === undefined){\r\n        endTime = Date.now()\r\n      }\r\n    },\r\n    totalTime(){\r\n      if(initTime !== undefined && endTime !== undefined){\r\n        return endTime - initTime\r\n        // return 16516513203\r\n      }\r\n    },\r\n    wordsPerMinute(){\r\n      if(this.totalTime()){\r\n\r\n        const seconds = (this.totalTime() / 1000).toFixed(1)\r\n        const baseTextarea = document.querySelector('.base-textarea').textContent\r\n        const words = baseTextarea.match(/\\S+/gi)\r\n        const wordsCount = words.length\r\n        const wpm = Math.round( (wordsCount * 60) / seconds )\r\n        return wpm\r\n      }\r\n    },\r\n    format(type='HMSMS'){\r\n      // const msTotalTime = 10000025\r\n      const msTotalTime = this.totalTime()\r\n\r\n      if(type === 'HMSMS' && msTotalTime !== undefined){\r\n        const date = new Date()\r\n        date.setHours(0)\r\n        date.setMinutes(0)\r\n        date.setSeconds(0)\r\n        date.setMilliseconds(msTotalTime)\r\n\r\n        const mountHours = '000'+ date.getHours()\r\n        const hours = mountHours.substring(mountHours.length -2)\r\n        const mountMinutes = '00' + date.getMinutes()\r\n        const minutes = mountMinutes.substring(mountMinutes.length -2)\r\n        const mountSeconds = '00' + date.getSeconds()\r\n        const seconds = mountSeconds.substring(mountSeconds.length -2)\r\n        const mountMiliseconds = '00' + date.getMilliseconds()\r\n        const miliseconds = mountMiliseconds.substring(mountMiliseconds.length -3)\r\n\r\n        const mountTime = `${hours}:${minutes}:${seconds}:${miliseconds}`\r\n        // const mountTime = '00:02:15:00'\r\n        const [stringTime, typeTime] = checkTimeValues(mountTime)\r\n\r\n        // console.log(stringTime)\r\n        // return ` ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}:${date.getMilliseconds()}` \r\n\r\n        return [stringTime, typeTime]\r\n      }\r\n\r\n      function checkTimeValues(mountTime=''){\r\n        let arrayTime = mountTime.split(':')\r\n        let stringTime = '00'\r\n        const typesTime = ['hour', 'minutes', 'seconds' , 'miliseconds']\r\n        let typeTime \r\n        for(let i in arrayTime){\r\n          const tTime = arrayTime[i]\r\n          // console.log('teste3', tTime, Number (tTime) > 0 , tTime > 0)\r\n          if(tTime > 0){\r\n            stringTime = arrayTime.slice(Number(i))\r\n            typeTime = typesTime[i]\r\n            // console.log('teste', stringTime)\r\n            break\r\n          }\r\n        }\r\n        // console.log('teste1', stringTime ,'teste2', arrayTime)\r\n        return [stringTime.join(':'), typeTime ]\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\nfunction initEficiencyController(){\r\n  let totalCharacters = 0\r\n  function updateTotalCharacters(){\r\n    totalCharacters = document.querySelector('.base-textarea').textContent.length\r\n  }\r\n  function totalCorrectCharacters(){\r\n    return document.querySelectorAll('.bg-green').length\r\n  }\r\n  // function totalIncorrectCharacters(){\r\n  //   return document.querySelectorAll('.bg-red').length\r\n  // }\r\n  return {\r\n    result(){\r\n      updateTotalCharacters()\r\n      return ((totalCorrectCharacters() * 100) / totalCharacters).toFixed(2)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default utils","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, {useEffect , useState} from 'react';\r\nimport './App.css'\r\nimport '../../baseStyles.css'\r\n\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\n\r\nimport utils from './utils'\r\nconst {\r\n    changeStringToArray,\r\n    createSpan,\r\n    updateInput,\r\n    resetTextCursor,\r\n    setTranslateConfig,\r\n    moveScrollTranslateArea,\r\n    timeController\r\n  } = utils\r\n\r\nexport default () =>{\r\n\r\n   \r\n  const [wrapper , setWrapper] = useState(false)\r\n\r\n  // const [refText , setRefText] = useState(`It seems like the world`)\r\n  const [refText , setRefText] = useState(`Add text`)\r\n\r\n  const handleBoolCheckbox = useState(true)\r\n  const [boolCheckbox, setBoolCheckbox] = handleBoolCheckbox\r\n\r\n  const handleBoolCheckboxArea = useState(false)\r\n  const [boolCheckboxArea] = handleBoolCheckboxArea\r\n\r\n  let handleBool = { handleBoolCheckbox,handleBoolCheckboxArea}\r\n  \r\n  useEffect(()=>{\r\n    \r\n    updateInput()\r\n    const ckbox = document.querySelector('#checkWrite')\r\n\r\n    document.addEventListener('keydown',()=>{\r\n      const tinput= document.querySelector('#typing-textarea')\r\n      if (ckbox.checked){\r\n        tinput.focus()\r\n      }\r\n    })\r\n\r\n    document.addEventListener('click',()=>{\r\n      const tinput= document.querySelector('#typing-textarea')\r\n      if (ckbox.checked){\r\n        tinput.focus()\r\n      }\r\n    })\r\n  })\r\n\r\n  function changeText(){\r\n    \r\n    handleBool = {\r\n      handleBoolCheckbox,handleBoolCheckboxArea\r\n    }\r\n    timeController.reset()\r\n\r\n    resetTextCursor(handleBool)\r\n    \r\n    const textWrapper = document.querySelector('.textarea-wrapper').value\r\n    setRefText(textWrapper)\r\n\r\n    setTranslateConfig()\r\n    \r\n    toggleWrapper()\r\n  }\r\n\r\n  function closerUpdateInput (){\r\n\r\n    handleBool = {\r\n      handleBoolCheckbox,handleBoolCheckboxArea\r\n    }\r\n    timeController.start()\r\n    \r\n    moveScrollTranslateArea()\r\n\r\n    updateInput(handleBool)\r\n    // return updateInput(handleBool)\r\n  }\r\n\r\n  function closerToggleChackbox(){\r\n    setBoolCheckbox(!boolCheckbox)\r\n  }\r\n\r\n  function toggleWrapper(){\r\n    !wrapper? setBoolCheckbox(false) : setBoolCheckbox(true)\r\n    setWrapper ( !wrapper)\r\n  }\r\n\r\n  return (\r\n    <div className='app'>\r\n    \r\n      <div className='header'>\r\n        <div className='header-content'>\r\n          <h1>\r\n            T-typing\r\n          </h1>\r\n          <div className='checkbox-area' hidden= {boolCheckboxArea}>\r\n            <input type='checkbox' id='checkWrite' onClick={closerToggleChackbox} checked = {boolCheckbox}/>Ativar digitação\r\n            <textarea  id='typing-textarea' onChange={closerUpdateInput} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='main'>\r\n\r\n        <div className='translate-area'>\r\n          {/* It seems like the world is growing more and more interested in Juliette Freire, an anonymous woman who has been gaining lots of attention.It seems like the world is growing more and more interested in Juliette Freire, an anonymous woman who has been gaining lots of attention.It seems like the world is growing more and more interested in Juliette Freire, an anonymous woman who has been gaining lots of attention. */}\r\n        </div>\r\n\r\n        <div className='base-textarea'>\r\n          {refText.length > 0 ? changeStringToArray(refText).map((char,index)=> createSpan(char,index)):<div/>}\r\n        </div>\r\n        <div className='btn-add-text' onClick={toggleWrapper}>\r\n          Add Text\r\n        </div>\r\n        <div className='time-area'></div>\r\n      </div>\r\n        {wrapper? \r\n        <Wrapper toggleWrapper = {toggleWrapper} changeText= {changeText}/> : <div/>}\r\n    \r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './files/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}